---
import Pagination from '@/components/products/Pagination.astro'
import ProductListing, {
  type Product,
} from '@/components/products/ProductListing.astro'
import ProductLayout from '@/layouts/ProductLayout.astro'
import pb, { adminauth, filecdn } from '@/lib/pb'
import { capitalize_col } from '@/utils/transforms'

const { col = 'FURNITURE' } = Astro.params

const {
  items: records,
  page,
  perPage,
  totalPages,
  totalItems,
} = await pb.collection(col.toUpperCase()).getList(1, 20)

const products: Product[] = records.map((r) => ({
  name: r.Name,
  image: filecdn(r.collectionId, r.id, r.Image[0]),
  model: r.Model,
  id: r.id,
  alt_text: `${r.Name} | ${r.Model}`,
}))

const fields: Array<string> = []

// const authData = await pb.admins?.authWithPassword?.('web@gmail.com', 'premierweb').catch(error);
// console.log(authData)
await adminauth()

if (pb.authStore?.isAdmin)
  await pb.collections
    .getFullList({
      filter: 'name != "Users"',
      sort: '-created',
    })
    .then((colarr) =>
      colarr.map((col) => fields.push(capitalize_col(col.name)))
    )
const need_pagination = totalItems > perPage
---

<ProductLayout {fields}>
  <ProductListing {products} />
  {need_pagination && <Pagination {totalPages} currentPage={page} {perPage} />}
</ProductLayout>
