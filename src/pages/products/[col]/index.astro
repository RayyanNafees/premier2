---
export const prerender=false

import Pagination from "@/components/products/Pagination.astro";
import ProductListing, {
  type Product,
} from "@/components/products/ProductListing.astro";
import ProductLayout from "@/layouts/ProductLayout.astro";
import pb, { adminauth, colNames, filecdn } from "@/lib/pb";
import { log } from "@/utils/debug";
import { capitalize_col } from "@/utils/transforms";
import type { ListResult, RecordModel } from "pocketbase";
const { col = "FURNITURE" } = Astro.params;

if (col == "service-worker.js")
  return new Response("Not found", { status: 404 });

const {
  items: records = [],
  page = 1,
  perPage = 10,
  totalPages = 10,
  totalItems = 10,
} = await pb
  .collection(col.toUpperCase()) // BUG
  .getList(1, 20)
  .catch((e) => log({} as ListResult<RecordModel>, "Nothing foun for" + col));

const products: Product[] = records.map((r) => ({
  name: r.name,
  image: filecdn(r.collectionId, r.id, r.images[0]),
  model: r.model,
  href: `${col}/${r.id}`,
  alt_text: `${r.name} | ${r.model}`,
}));

const fields: Array<string> = [];

if (!pb.authStore?.isAdmin) {
  await adminauth();
}

(await colNames()).map((c) => fields.push(c));

const need_pagination = totalItems > perPage; // TODO: Implement Pagination
---

<ProductLayout {fields} title={capitalize_col(col)}>
  <ProductListing {products} />
  <!-- {need_pagination && <Pagination {totalPages} currentPage={page} {perPage} />} -->
</ProductLayout>
